Heredar no significa que tu clase reciba dinero sino metodos y atributos de otra clase,Usar "extends" en Java te permite heredar de una clase y utilizar los metodos de la clase padre,Una clase abstracta es como un molde: no se puede instanciar pero define estructura para otras clases,En Java todas las clases descienden de la clase Object aunque no lo escribas en el codigo,La palabra clave "super" te permite acceder a metodos y constructores de la clase padre desde una subclase,Si un metodo esta marcado como final las subclases no podran sobrescribirlo,Java no permite herencia multiple de clases pero si de interfaces utilizando "implements",El polimorfismo permite tratar un objeto de subclase como si fuera de su superclase,Los metodos "protected" son visibles dentro del mismo paquete y para todas las subclases,Al sobrescribir un metodo debes mantener su firma exacta o el compilador se quejara,Una subclase puede ocultar variables de la clase padre si usa el mismo nombre aunque no se recomienda,Las interfaces pueden tener metodos por defecto con implementacion usando la palabra clave default,Puedes crear jerarquias de clases donde una clase hereda de otra que a su vez hereda de otra,Al redefinir un metodo en una subclase puedes invocar el comportamiento original antes o despues de tu propia logica,El acceso a miembros heredados depende de sus modificadores y del paquete donde se ubiquen las clases,La herencia tambien se aplica a excepciones permitiendo crear jerarquias de errores mas especificas,Las subclases pueden redefinir toString para mostrar informacion personalizada al imprimir un objeto,Puedes usar instanceof para verificar si un objeto pertenece a una clase o subclase antes de hacer un casteo,Los objetos pueden almacenarse en colecciones del tipo de su superclase permitiendo estructuras mas genericas,En proyectos grandes conviene limitar la profundidad de la herencia para mantener el codigo legible y facil de mantener,Una clase puede implementar varias interfaces aunque no pueda heredar de varias clases,Los metodos estaticos no se heredan de la misma forma que los metodos de instancia,El orden de inicializacion de constructores sigue la cadena de herencia de arriba hacia abajo,Puedes combinar herencia e interfaces para crear jerarquias flexibles y seguras,Las subclases pueden llamar a constructores sobrecargados de la clase padre usando super(parametros),Los bloques de inicializacion estaticos se ejecutan una vez al cargar la clase incluso en subclases,Las excepciones checked heredadas deben ser declaradas o capturadas por la subclase,Herencia permite usar tipos mas generales en colecciones y metodos aumentando la reutilizacion de codigo,Puedes usar clases internas heredadas para encapsular logica especifica de la subclase,La herencia no afecta a la serializacion pero los atributos heredados deben ser serializables para ser guardados
